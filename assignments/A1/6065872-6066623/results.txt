# Cabal (20%)

Initial comments generated by Cabal are still in there. There is no stack.yaml,
but that is okay. `cabal sandbox init && cabal install` works. It would be nice
to put source files in a `src` directory.

1 / 1.

# Unfold (20%)

Naming functions with a prime is good, importing the prelude hiding these would
be even better. `iterate` might be written point-free (leave out the `x`
argument), but this is a matter of style.

`map` has unnecessary parentheses.

`balanced` is correct. The style could be better (spaces around operators,
guards use more lines than required).

`sized` is missing.

0.75 / 1.

# Count (15%)

Style note: comments are more readable if you use a space after the --. Solution
works and does not use language extensions. Class has no more functions than
required.

1/1.

# Permutations (20%)

Indentation and newlines around module declaration are a bit werid. The
implementation is incorrect for the empty list:

    smooth_perms 1 [] = []

whereas it should be

    smooth_perms 1 [] = [[]]

Furthermore, the use of magic values ("n * 2000", suicide leaf?) is ugly. I am
not even sure whether this is correct; it might fail for [1..2000], but that
list is too long to try in practice.

0.5 / 1.

# Proof (25%)

If you do hand in a scan/picture, please at least rotate the picture to be
upright. Also, you might give the file a more descriptive name than
"IMG_5517.JPG".

In an induction proof, you should state what variable you are doing induction
on.

In the x:xs case, you want to prove that

  length (x:xs) + length ys == length (x:xs ++ ys)

Your lemma did not have the x:xs part in the right-hand side.

0.8 / 1.0.

# General remarks

 * The result is a zip file that contains a tar.gz file.
 * You zipped up your __MACOSX directories.

# Final grade

8 / 10.
